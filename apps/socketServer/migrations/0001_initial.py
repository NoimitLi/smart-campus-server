# Generated by Django 4.2.23 on 2025-08-19 11:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('oauth', '0010_alter_usermodel_avatar'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserPresence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_online', models.BooleanField(default=False, verbose_name='是否在线')),
                ('last_seen', models.DateTimeField(auto_now=True, verbose_name='最后活跃时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='presence',
                                              to='oauth.usermodel', verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户在线状态',
                'verbose_name_plural': '用户在线状态管理',
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='房间名称')),
                ('room_type', models.CharField(choices=[('group', '群组聊天'), ('private', '私密聊天')], max_length=10, verbose_name='房间类型')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('members',
                 models.ManyToManyField(related_name='chat_rooms', to='oauth.usermodel', verbose_name='成员列表')),
            ],
            options={
                'verbose_name': '聊天室',
                'verbose_name_plural': '聊天室管理',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='消息内容')),
                ('is_read', models.BooleanField(default=False, verbose_name='是否已读')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='发送时间')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='socketServer.chatroom', verbose_name='所属聊天室')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages',
                                             to='oauth.usermodel', verbose_name='发送者')),
            ],
            options={
                'verbose_name': '聊天消息',
                'verbose_name_plural': '聊天消息管理',
                'ordering': ['created_time'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('message', '新消息'), ('friend_request', '好友请求'), ('system', '系统通知'), ('group_invite', '群组邀请')], max_length=20, verbose_name='通知类型')),
                ('title', models.CharField(max_length=255, verbose_name='通知标题')),
                ('message', models.TextField(verbose_name='通知内容')),
                ('is_read', models.BooleanField(default=False, verbose_name='是否已读')),
                ('related_id', models.CharField(blank=True, help_text='可用于关联消息、群组等', max_length=100, null=True, verbose_name='关联ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('recipient',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications',
                                   to='oauth.usermodel', verbose_name='接收用户')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                             related_name='sent_notifications', to='oauth.usermodel',
                                             verbose_name='发送用户')),
            ],
            options={
                'verbose_name': '用户通知',
                'verbose_name_plural': '用户通知管理',
                'ordering': ['-created_time'],
                'indexes': [models.Index(fields=['recipient', 'is_read'], name='unread_notifications_idx'), models.Index(fields=['created_time'], name='notification_created_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['room_type'], name='room_type_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['created_time'], name='room_created_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['room', 'is_read'], name='room_unread_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['sender', 'is_read'], name='sender_unread_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['created_time'], name='message_created_idx'),
        ),
    ]
